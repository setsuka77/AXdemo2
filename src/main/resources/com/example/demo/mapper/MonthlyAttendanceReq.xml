<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.example.demo.mapper.MonthlyAttendanceReqMapper">

	<!-- 承認申請ボタン押下時　承認申請新規登録 -->
	<insert id="insert"
		parameterType="com.example.demo.entity.MonthlyAttendanceReq">
		INSERT INTO monthly_attendance_req (user_id,
		target_year_month, date,
		status)
		VALUES (#{userId}, #{targetYearMonth},
		#{date}, #{status})
	</insert>


	<!-- 承認申請ボタン押下時 却下後承認申請更新 -->
	<update id="update"
		parameterType="com.example.demo.entity.MonthlyAttendanceReq">
		UPDATE monthly_attendance_req
		SET user_id = #{userId},
		target_year_month = #{targetYearMonth},
		date = #{date},
		status =
		#{status}
		comment = #{comment}
		WHERE id = #{id}
	</update>

	<!-- ユーザーと年月で申請を検索 -->
	<select id="findByUserAndYearMonth" parameterType="map"
		resultType="com.example.demo.entity.MonthlyAttendanceReq">
		SELECT * FROM monthly_attendance_req
		WHERE user_id =
		#{userId}
		AND target_year_month = #{targetYearMonth}
	</select>

	<!-- Select SQL with Status -->
	<select id="findAllWithStatus"
		resultType="com.example.demo.dto.MonthlyAttendanceReqDto">
		SELECT
		u.name AS userName,
		u.id AS userId,
		mar.*
		FROM
		monthly_attendance_req mar
		JOIN
		users u ON mar.user_id = u.id
		WHERE
		mar.status = 1
	</select>

	<!-- 指定した年月のステータスを取得 -->
	<select id="findByYearMonth" parameterType="map"
		resultType="com.example.demo.dto.MonthlyAttendanceReqDto">
		SELECT
		u.name AS userName,
		u.id AS userId,
		mar.*
		FROM
		monthly_attendance_req mar
		JOIN
		users u ON mar.user_id = u.id
		WHERE
		mar.user_id = #{userId}
		AND
		mar.target_year_month = #{targetYearMonth}
	</select>

	<!-- 申請IDで情報を取得 -->
	<select id="findById" parameterType="Integer"
		resultType="com.example.demo.entity.MonthlyAttendanceReq">
		SELECT
		u.name AS userName,
		u.id AS userId,
		mar.*
		FROM
		monthly_attendance_req mar
		JOIN
		users u ON mar.user_id = u.id
		WHERE
		mar.id = #{id}
	</select>

	<!-- 却下、承認ボタン押下時ステータス更新 -->
	<update id="updateStatus"
		parameterType="com.example.demo.entity.MonthlyAttendanceReq">
		UPDATE monthly_attendance_req 
		SET status = #{status},
		date = #{date},
		comment = #{comment}
		WHERE id = #{id}
	</update>
	
	<!-- 提出してないユーザーの情報を取得 -->
	<select id="findUsersWithoutAttendance"
		resultType="com.example.demo.dto.UsersDto">
		SELECT u.*
		FROM users u
		WHERE u.role IN (3, 4) <!-- role が 3 または 4 のユーザー -->
		AND u.id NOT IN (
		SELECT req.user_id
		FROM monthly_attendance_req req
		WHERE req.target_year_month = #{date} <!-- 指定の日付で日報が提出されているか確認 -->
		)
	</select>
	

</mapper>
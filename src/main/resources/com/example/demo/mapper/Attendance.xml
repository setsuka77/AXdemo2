<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.AttendanceMapper">

	<!-- 勤怠登録情報取得(ユーザーID) -->
	<select id="findByUserId" parameterType="int"
		resultType="com.example.demo.entity.Attendance">
		SELECT * FROM attendance WHERE user_id = #{userId}
	</select>

	<!-- 勤怠登録情報用DTOリスト取得 -->
	<select id="findAttendanceByUserIdAndDateRange"
		resultType="com.example.demo.dto.AttendanceDto">
		SELECT a.*
		FROM attendance a
		INNER JOIN users u ON a.user_id = u.id
		WHERE u.id = #{userId}
		AND a.date BETWEEN #{startDate} AND #{endDate}
	</select>

	<!-- 勤怠ID取得用 -->
	<select id="findByDateAndUserId"
		resultType="com.example.demo.entity.Attendance">
		SELECT *
		FROM attendance
		WHERE user_id = #{userId}
		AND date = #{date}
	</select>


	<!-- 勤怠登録情報登録 -->
	<insert id="insert"
		parameterType="com.example.demo.entity.Attendance">
		INSERT INTO attendance (user_id, status, date, start_time, end_time,remarks)
		VALUES (#{userId}, #{status}, #{date}, #{startTime}, #{endTime},
		#{remarks})
	</insert>

	<!-- 勤怠登録情報更新 -->
	<update id="update"
		parameterType="com.example.demo.entity.Attendance">
		UPDATE attendance
		SET
		user_id = #{userId},
		status =
		#{status},
		date = #{date},
		start_time = #{startTime},
		end_time =
		#{endTime},
		remarks = #{remarks}
		WHERE id = #{id}
	</update>



	<!-- Select SQL by User ID and Date Range -->
	<select id="findAttendancesByUserIdAndDateRange"
		parameterType="map" resultType="com.example.demo.entity.Attendance">
		SELECT id, user_id, date, status, hours
		FROM attendance
		WHERE user_id = #{userId}
		AND date BETWEEN #{startDate} AND #{endDate}
	</select>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.AttendanceMapper">

	<!-- 勤怠登録情報取得(ユーザーID) -->
	<select id="findByUserId" parameterType="int" resultType="com.example.demo.entity.Attendance">
		SELECT * FROM attendance WHERE user_id = #{userId}
	</select>

	<!-- 勤怠登録情報用DTOリスト取得 -->
	<select id="findAttendanceByUserIdAndDateRange" resultType="com.example.demo.dto.AttendanceDto">
    SELECT a.* 
    FROM attendance a
    INNER JOIN users u ON a.user_id = u.id
    WHERE u.id = #{userId} 
    AND a.date BETWEEN #{startDate} AND #{endDate}
	</select>

	<!-- 勤怠登録情報登録 -->
	<insert id="insert" parameterType="com.example.demo.entity.Attendance">
		INSERT INTO attendance (user_id, status, date, start_time, end_time,
		remarks)
		VALUES (#{userId}, #{status}, #{date}, #{startTime}, #{endTime}, #{remarks})
	</insert>
	
	<!-- 勤怠登録情報更新 -->
	<update id="update" parameterType="com.example.demo.entity.Attendance">
		UPDATE attendance
		SET
		user_id = #{userId},
		status = #{status},
		date = #{date},
		start_time = #{startTime},
		end_time = #{endTime},
		remarks = #{remarks}
		WHERE id = #{id}
	</update>
	


    <!-- 勤怠登録情報 承認申請された勤怠情報の取得 -->
 <!--    <select id="getAttendanceDetails" resultType="com.example.demo.entity.Attendance">
        SELECT 
            date, 
            user_id as userId, 
            status, 
            start_time as startTime, 
            end_time as endTime, 
            remarks
        FROM 
            attendance
        WHERE 
            user_id = #{userId} 
            AND date BETWEEN #{startOfMonth} AND #{endOfMonth}
    </select> -->
    
    
</mapper>